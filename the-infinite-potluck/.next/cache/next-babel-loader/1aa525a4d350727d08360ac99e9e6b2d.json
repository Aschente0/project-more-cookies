{"ast":null,"code":"var __jsx = React.createElement;\nimport { React, Component } from 'react';\nimport io from 'socket.io-client';\nimport { render } from 'react-dom';\n\nvar BroadcasterPage = function BroadcasterPage() {\n  // document.querySelector('cam').innerHTML='wew';\n  return __jsx(\"div\", {\n    id: \"cam\"\n  }, __jsx(\"p\", null, \" hello \")); // return (\n  //     <div>\n  //         <video playsInline autoPlay muted></video>\n  //         <script type=\"text/javascript\">\n  //             const video = document.querySelector('video');\n  //             navigator.mediaDevices.getUserMedia({video: true, audio: true})\n  //             .then((stream) => {video.srcObject=stream});\n  //         </script>\n  //         <p> broadcaster page </p>\n  //     </div>\n  // )\n};\n\nexport default BroadcasterPage;","map":{"version":3,"sources":["C:/Users/carlo_fqwuyel/Desktop/UofT/CSCC09/project/project-project-more-cookies/the-infinite-potluck/pages/broadcasterPage.js"],"names":["React","Component","io","render","BroadcasterPage"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAIA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAG1B;AAEA,SACI;AAAK,IAAA,EAAE,EAAC;AAAR,KACI,2BADJ,CADJ,CAL0B,CAU1B;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,CAxBD;;AAyBA,eAAeA,eAAf","sourcesContent":["import { React, Component } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { render } from 'react-dom';\r\n\r\n\r\n\r\nconst BroadcasterPage = () => {\r\n    \r\n\r\n    // document.querySelector('cam').innerHTML='wew';\r\n\r\n    return(\r\n        <div id=\"cam\">\r\n            <p> hello </p>\r\n        </div>\r\n    )\r\n    // return (\r\n    //     <div>\r\n    //         <video playsInline autoPlay muted></video>\r\n    //         <script type=\"text/javascript\">\r\n\r\n\r\n    //             const video = document.querySelector('video');\r\n    //             navigator.mediaDevices.getUserMedia({video: true, audio: true})\r\n    //             .then((stream) => {video.srcObject=stream});\r\n    //         </script>\r\n    //         <p> broadcaster page </p>\r\n    //     </div>\r\n    // )\r\n\r\n}\r\nexport default BroadcasterPage;\r\n"]},"metadata":{},"sourceType":"module"}