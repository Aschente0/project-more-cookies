{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport io from 'socket.io-client';\nimport { render } from 'react-dom'; // const Broadcaster = () => {\n\nvar Medium = /*#__PURE__*/function (_Component) {\n  _inherits(Medium, _Component);\n\n  function Medium() {\n    _classCallCheck(this, Medium);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Medium).apply(this, arguments));\n  }\n\n  _createClass(Medium, [{\n    key: \"componentDidmount\",\n    // constructor(props){\n    //     super(props);\n    //     this.state={\n    //         hello:''\n    //     }\n    // }\n    // componentDidMount(){\n    //     this.socket=io()\n    //     this.socket.emit('broadcaster');\n    //     this.socket.on('now', (data) => {\n    //         this.setState({\n    //             hello: data.message\n    //         })\n    //     })\n    // }\n    // render(){\n    //     return(\n    //         <div>\n    //             <h1>{this.state.hello}</h1>\n    //             <p>test</p>\n    //         </div>\n    //     )\n    // }\n    value: function componentDidmount() {\n      var peerConnection = new RTCPeerConnection();\n      var socket = io();\n      document.getElementById('test').innerHTML = 'nice';\n      navigator.mediaDevices.getUserMedia({\n        video: true\n      }).then(function (stream) {\n        peerConnection.addStream(stream);\n        peerConnection.createOffer().then(function (sdp) {\n          return peerConnection.setLocalDescription(sdp);\n        }).then(function () {\n          socket.emit('offer', peerConnection.localDescription);\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(\"p\", null, \" hello world s\"), __jsx(\"video\", {\n        id: \"video\",\n        width: \"640\",\n        height: \"480\",\n        playsInline: true,\n        autoPlay: true,\n        muted: true\n      }), __jsx(\"div\", {\n        id: \"test\"\n      }));\n    }\n  }]);\n\n  return Medium;\n}(Component); // export default Broadcaster;\n\n\nexport { Medium as default };","map":{"version":3,"sources":["C:/Users/carlo_fqwuyel/Desktop/UofT/CSCC09/project/project-project-more-cookies/the-infinite-potluck/pages/broadcaster.js"],"names":["Component","io","render","Medium","peerConnection","RTCPeerConnection","socket","document","getElementById","innerHTML","navigator","mediaDevices","getUserMedia","video","then","stream","addStream","createOffer","sdp","setLocalDescription","emit","localDescription"],"mappings":";;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,MAAT,QAAuB,WAAvB,C,CAEA;;IACqBC,M;;;;;;;;;;;AACjB;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;wCAEmB;AACf,UAAMC,cAAc,GAAG,IAAIC,iBAAJ,EAAvB;AACA,UAAMC,MAAM,GAAGL,EAAE,EAAjB;AAEAM,MAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,SAAhC,GAA4C,MAA5C;AAEAC,MAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AAChCC,QAAAA,KAAK,EAAE;AADyB,OAApC,EAGCC,IAHD,CAGM,UAASC,MAAT,EAAgB;AAClBX,QAAAA,cAAc,CAACY,SAAf,CAAyBD,MAAzB;AAEAX,QAAAA,cAAc,CAACa,WAAf,GACCH,IADD,CACM,UAAAI,GAAG;AAAA,iBAAId,cAAc,CAACe,mBAAf,CAAmCD,GAAnC,CAAJ;AAAA,SADT,EAECJ,IAFD,CAEM,YAAU;AACZR,UAAAA,MAAM,CAACc,IAAP,CAAY,OAAZ,EAAqBhB,cAAc,CAACiB,gBAApC;AACH,SAJD;AAKH,OAXD;AAYH;;;6BAEO;AACJ,aACI,mBACI,kCADJ,EAEI;AAAO,QAAA,EAAE,EAAC,OAAV;AAAkB,QAAA,KAAK,EAAC,KAAxB;AAA8B,QAAA,MAAM,EAAC,KAArC;AAA2C,QAAA,WAAW,MAAtD;AAAuD,QAAA,QAAQ,MAA/D;AAAgE,QAAA,KAAK;AAArE,QAFJ,EAII;AAAK,QAAA,EAAE,EAAC;AAAR,QAJJ,CADJ;AAUH;;;;EA5D+BrB,S,GA+DpC;;;SA/DqBG,M","sourcesContent":["import { Component } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { render } from 'react-dom';\r\n\r\n// const Broadcaster = () => {\r\nexport default class Medium extends Component {\r\n    // constructor(props){\r\n    //     super(props);\r\n\r\n    //     this.state={\r\n    //         hello:''\r\n    //     }\r\n    // }\r\n\r\n    // componentDidMount(){\r\n    //     this.socket=io()\r\n    //     this.socket.emit('broadcaster');\r\n    //     this.socket.on('now', (data) => {\r\n    //         this.setState({\r\n    //             hello: data.message\r\n    //         })\r\n    //     })\r\n    // }\r\n    \r\n    // render(){\r\n    //     return(\r\n    //         <div>\r\n    //             <h1>{this.state.hello}</h1>\r\n    //             <p>test</p>\r\n    //         </div>\r\n            \r\n    //     )\r\n    // }\r\n\r\n    componentDidmount(){\r\n        const peerConnection = new RTCPeerConnection();\r\n        const socket = io();\r\n\r\n        document.getElementById('test').innerHTML = 'nice';\r\n\r\n        navigator.mediaDevices.getUserMedia({\r\n            video: true\r\n        })\r\n        .then(function(stream){\r\n            peerConnection.addStream(stream);\r\n\r\n            peerConnection.createOffer()\r\n            .then(sdp => peerConnection.setLocalDescription(sdp))\r\n            .then(function(){\r\n                socket.emit('offer', peerConnection.localDescription);\r\n            });\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <p> hello world s</p>\r\n                <video id=\"video\" width=\"640\" height=\"480\" playsInline autoPlay muted></video>\r\n\r\n                <div id=\"test\">\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n}\r\n// export default Broadcaster;"]},"metadata":{},"sourceType":"module"}