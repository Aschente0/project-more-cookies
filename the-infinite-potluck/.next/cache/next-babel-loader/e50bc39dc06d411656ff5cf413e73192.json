{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport io from 'socket.io-client';\nimport { render } from 'react-dom';\nimport { Video } from '../components/Video'; // const Watcher = () => {\n\nvar Medium = /*#__PURE__*/function (_Component) {\n  _inherits(Medium, _Component);\n\n  function Medium() {\n    _classCallCheck(this, Medium);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Medium).apply(this, arguments));\n  }\n\n  _createClass(Medium, [{\n    key: \"componentDidMount\",\n    // constructor(props){\n    //     super(props);\n    //     this.state={\n    //         hello:''\n    //     }\n    // }\n    // componentDidMount(){\n    //     this.socket=io()\n    //     this.socket.emit('watcher');\n    //     this.socket.on('now', (data) => {\n    //         this.setState({\n    //             hello: data.message\n    //         })\n    //     })\n    // }\n    // render(){\n    //     return(\n    //         <div>\n    //             <h1>{this.state.hello}</h1>\n    //             <p>test</p>\n    //         </div>\n    //     )\n    // }\n    value: function componentDidMount() {\n      var peerConnection = new RTCPeerConnection();\n      var socket = io();\n      var video = document.querySelector('video');\n      socket.on('offer', function (message) {\n        peerConnection.setRemoteDescription(message).then(function () {\n          return peerConnection.createAnswer();\n        }).then(function (sdp) {\n          return peerConnection.setLocalDescription(sdp);\n        }).then(function () {\n          socket.emit('answer', peerConnection.localDescription);\n        });\n      });\n\n      peerConnection.onaddstream = function (event) {\n        video.srcObject = event.stream;\n        console.log(\"VIDEO: \" + video);\n      };\n\n      console.log(\"VIDEO: outside : \" + video);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(\"video\", {\n        id: \"video\",\n        autoPlay: true\n      }), __jsx(\"div\", null, \"watcher\"));\n    }\n  }]);\n\n  return Medium;\n}(Component); // export default Watcher;\n\n\nexport { Medium as default };","map":{"version":3,"sources":["C:/Users/carlo_fqwuyel/Desktop/UofT/CSCC09/project/project-project-more-cookies/the-infinite-potluck/pages/watcher.js"],"names":["Component","io","render","Video","Medium","peerConnection","RTCPeerConnection","socket","video","document","querySelector","on","message","setRemoteDescription","then","createAnswer","sdp","setLocalDescription","emit","localDescription","onaddstream","event","srcObject","stream","console","log"],"mappings":";;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,KAAT,QAAsB,qBAAtB,C,CACA;;IACqBC,M;;;;;;;;;;;AACjB;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;wCAEmB;AACf,UAAMC,cAAc,GAAG,IAAIC,iBAAJ,EAAvB;AAEA,UAAMC,MAAM,GAAGN,EAAE,EAAjB;AACA,UAAMO,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AAEAH,MAAAA,MAAM,CAACI,EAAP,CAAU,OAAV,EAAmB,UAAUC,OAAV,EAAkB;AACjCP,QAAAA,cAAc,CAACQ,oBAAf,CAAoCD,OAApC,EACCE,IADD,CACM;AAAA,iBAAMT,cAAc,CAACU,YAAf,EAAN;AAAA,SADN,EAECD,IAFD,CAEM,UAAAE,GAAG;AAAA,iBAAIX,cAAc,CAACY,mBAAf,CAAmCD,GAAnC,CAAJ;AAAA,SAFT,EAGCF,IAHD,CAGM,YAAW;AACbP,UAAAA,MAAM,CAACW,IAAP,CAAY,QAAZ,EAAsBb,cAAc,CAACc,gBAArC;AACH,SALD;AAMH,OAPD;;AASAd,MAAAA,cAAc,CAACe,WAAf,GAA6B,UAAUC,KAAV,EAAiB;AAC1Cb,QAAAA,KAAK,CAACc,SAAN,GAAkBD,KAAK,CAACE,MAAxB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAYjB,KAAxB;AACH,OAHD;;AAIAgB,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBjB,KAAlC;AACH;;;6BAEO;AACJ,aACI,4BACA;AAAO,QAAA,EAAE,EAAC,OAAV;AAAkB,QAAA,QAAQ;AAA1B,QADA,EAEA,6BAFA,CADJ;AAMH;;;;EA1D+BR,S,GA4DpC;;;SA5DqBI,M","sourcesContent":["import { Component } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { render } from 'react-dom';\r\nimport { Video } from '../components/Video';\r\n// const Watcher = () => {\r\nexport default class Medium extends Component {\r\n    // constructor(props){\r\n    //     super(props);\r\n\r\n    //     this.state={\r\n    //         hello:''\r\n    //     }\r\n    // }\r\n\r\n    // componentDidMount(){\r\n    //     this.socket=io()\r\n    //     this.socket.emit('watcher');\r\n    //     this.socket.on('now', (data) => {\r\n    //         this.setState({\r\n    //             hello: data.message\r\n    //         })\r\n    //     })\r\n    // }\r\n    \r\n    // render(){\r\n    //     return(\r\n    //         <div>\r\n    //             <h1>{this.state.hello}</h1>\r\n    //             <p>test</p>\r\n    //         </div>\r\n            \r\n    //     )\r\n    // }\r\n\r\n    componentDidMount(){\r\n        const peerConnection = new RTCPeerConnection();\r\n\r\n        const socket = io();\r\n        const video = document.querySelector('video');\r\n\r\n        socket.on('offer', function (message){\r\n            peerConnection.setRemoteDescription(message)\r\n            .then(() => peerConnection.createAnswer())\r\n            .then(sdp => peerConnection.setLocalDescription(sdp))\r\n            .then(function() {\r\n                socket.emit('answer', peerConnection.localDescription);\r\n            });\r\n        });\r\n\r\n        peerConnection.onaddstream = function (event) {\r\n            video.srcObject = event.stream;\r\n            console.log(\"VIDEO: \" + video);\r\n        };\r\n        console.log(\"VIDEO: outside : \" + video);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <video id=\"video\" autoPlay/>\r\n            <div>watcher</div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n// export default Watcher;"]},"metadata":{},"sourceType":"module"}