{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport io from 'socket.io-client';\nimport { render } from 'react-dom';\nimport { Video } from '../components/Video';\n\nvar formatName = function formatName(user) {\n  return user.firstName + ' ' + user.lastName;\n};\n\nvar Welcome = function Welcome(_ref) {\n  var user = _ref.user;\n  return __jsx(\"p\", null, \"Welcome, \", formatName(user), \"!\");\n};\n\nvar Broadcast = /*#__PURE__*/function (_Component) {\n  _inherits(Broadcast, _Component);\n\n  function Broadcast() {\n    _classCallCheck(this, Broadcast);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Broadcast).apply(this, arguments));\n  }\n\n  _createClass(Broadcast, [{\n    key: \"componentDidMount\",\n    // WEBCAM VIDEO PLAYBACK; WORKING\n    // componentDidMount(){\n    //     const video = document.getElementById('videoElement');\n    //     console.log(\"VIDEO: \" + video);\n    //     navigator.mediaDevices.getUserMedia({video: true, audio: true})\n    //         .then((stream) => {video.srcObject=stream})\n    //         .catch(function (err0r) {\n    //             console.log(\"Something went wrong!\");\n    //         });\n    // }\n    value: function componentDidMount() {\n      var video = document.getElementById('videoElement');\n      console.log(\"VIDEO: \" + video);\n      var peerConnection = new RTCPeerConnection();\n      var socket = io();\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      }).then(function (stream) {\n        peerConnection.addStream(stream);\n        peerConnection.createOffer().then(function (sdp) {\n          return peerConnection.setLocalDescription(sdp);\n        }).then(function () {\n          socket.emit('offer', peerConnection.localDescription);\n        });\n      })[\"catch\"](function (err0r) {\n        console.log(\"Something went wrong!\");\n      });\n      socket.on('answer', function (message) {\n        peerConnection.setRemoteDescription(message);\n      });\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      }).then(function (stream) {\n        video.srcObject = stream;\n      })[\"catch\"](function (err0r) {\n        console.log(\"Something went wrong!\");\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(\"video\", {\n        id: \"videoElement\",\n        autoPlay: true\n      }), __jsx(\"p\", null, \" video component \"));\n    }\n  }]);\n\n  return Broadcast;\n}(Component); //WORKING VIDEO CAMERA\n\n/*\r\nexport default () => (\r\n    <Video />\r\n)\r\n*/\n//ALSO WORKS\n// const BroadcasterPage = () => (\n//     <Video />\n// )\n// export default BroadcasterPage;\n// const BroadcasterPage = () => {\n//     document.querySelector('cam').innerHTML='wew';\n//     return(\n//             <Text name=\"wew\"/>\n//     )\n//     return (\n//         <div>\n//             <video playsInline autoPlay muted></video>\n//             <script type=\"text/javascript\">\n//                 const video = document.querySelector('video');\n//                 navigator.mediaDevices.getUserMedia({video: true, audio: true})\n//                 .then((stream) => {video.srcObject=stream});\n//             </script>\n//             <p> broadcaster page </p>\n//         </div>\n//     )\n// }\n// export default BroadcasterPage;\n\n\nexport { Broadcast as default };","map":{"version":3,"sources":["C:/Users/carlo_fqwuyel/Desktop/UofT/CSCC09/project/project-project-more-cookies/the-infinite-potluck/pages/broadcasterPage.js"],"names":["Component","io","render","Video","formatName","user","firstName","lastName","Welcome","Broadcast","video","document","getElementById","console","log","peerConnection","RTCPeerConnection","socket","navigator","mediaDevices","getUserMedia","audio","then","stream","addStream","createOffer","sdp","setLocalDescription","emit","localDescription","err0r","on","message","setRemoteDescription","srcObject"],"mappings":";;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,KAAT,QAAsB,qBAAtB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,IAAI;AAAA,SAAIA,IAAI,CAACC,SAAL,GAAiB,GAAjB,GAAuBD,IAAI,CAACE,QAAhC;AAAA,CAAvB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,MAAGH,IAAH,QAAGA,IAAH;AAAA,SAAc,8BAAaD,UAAU,CAACC,IAAD,CAAvB,MAAd;AAAA,CAAhB;;IAEqBI,S;;;;;;;;;;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;wCAEmB;AACf,UAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAYJ,KAAxB;AAEA,UAAMK,cAAc,GAAG,IAAIC,iBAAJ,EAAvB;AACA,UAAMC,MAAM,GAAGhB,EAAE,EAAjB;AAEAiB,MAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AAACV,QAAAA,KAAK,EAAE,IAAR;AAAcW,QAAAA,KAAK,EAAE;AAArB,OAApC,EACKC,IADL,CACU,UAACC,MAAD,EAAY;AACdR,QAAAA,cAAc,CAACS,SAAf,CAAyBD,MAAzB;AACAR,QAAAA,cAAc,CAACU,WAAf,GACKH,IADL,CACU,UAAAI,GAAG;AAAA,iBAAIX,cAAc,CAACY,mBAAf,CAAmCD,GAAnC,CAAJ;AAAA,SADb,EAEKJ,IAFL,CAEU,YAAU;AACZL,UAAAA,MAAM,CAACW,IAAP,CAAY,OAAZ,EAAqBb,cAAc,CAACc,gBAApC;AACH,SAJL;AAKH,OARL,WASW,UAAUC,KAAV,EAAiB;AACpBjB,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH,OAXL;AAaAG,MAAAA,MAAM,CAACc,EAAP,CAAU,QAAV,EAAoB,UAAUC,OAAV,EAAkB;AAClCjB,QAAAA,cAAc,CAACkB,oBAAf,CAAoCD,OAApC;AACH,OAFD;AAIAd,MAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AAAEV,QAAAA,KAAK,EAAE,IAAT;AAAeW,QAAAA,KAAK,EAAE;AAAtB,OAApC,EACKC,IADL,CACU,UAACC,MAAD,EAAY;AAAEb,QAAAA,KAAK,CAACwB,SAAN,GAAkBX,MAAlB;AAA0B,OADlD,WAEW,UAAUO,KAAV,EAAiB;AACpBjB,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH,OAJL;AAKH;;;6BAEQ;AACL,aACI,4BACI;AAAO,QAAA,EAAE,EAAC,cAAV;AAAyB,QAAA,QAAQ;AAAjC,QADJ,EAGI,qCAHJ,CADJ;AAOH;;;;EApDkCd,S,GA0DvC;;AACA;;;;;AAMA;AAEA;AACA;AACA;AACA;AAGA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;SAhGqBS,S","sourcesContent":["import { Component } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { render } from 'react-dom';\r\nimport { Video } from '../components/Video';\r\n\r\nconst formatName = user => user.firstName + ' ' + user.lastName\r\n\r\nconst Welcome = ({ user }) => <p>Welcome, {formatName(user)}!</p>\r\n\r\nexport default class Broadcast extends Component {\r\n    \r\n    // WEBCAM VIDEO PLAYBACK; WORKING\r\n    // componentDidMount(){\r\n    //     const video = document.getElementById('videoElement');\r\n    //     console.log(\"VIDEO: \" + video);\r\n    //     navigator.mediaDevices.getUserMedia({video: true, audio: true})\r\n    //         .then((stream) => {video.srcObject=stream})\r\n    //         .catch(function (err0r) {\r\n    //             console.log(\"Something went wrong!\");\r\n    //         });\r\n    // }\r\n\r\n    componentDidMount(){\r\n        const video = document.getElementById('videoElement');\r\n        console.log(\"VIDEO: \" + video);\r\n\r\n        const peerConnection = new RTCPeerConnection();\r\n        const socket = io();\r\n\r\n        navigator.mediaDevices.getUserMedia({video: true, audio: true})\r\n            .then((stream) => {\r\n                peerConnection.addStream(stream);\r\n                peerConnection.createOffer()\r\n                    .then(sdp => peerConnection.setLocalDescription(sdp))\r\n                    .then(function(){\r\n                        socket.emit('offer', peerConnection.localDescription);\r\n                    });\r\n            })\r\n            .catch(function (err0r) {\r\n                console.log(\"Something went wrong!\");\r\n            });\r\n\r\n        socket.on('answer', function (message){\r\n            peerConnection.setRemoteDescription(message);\r\n        });\r\n\r\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n            .then((stream) => { video.srcObject = stream })\r\n            .catch(function (err0r) {\r\n                console.log(\"Something went wrong!\");\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <video id=\"videoElement\" autoPlay>\r\n                </video>\r\n                <p> video component </p>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n//WORKING VIDEO CAMERA\r\n/*\r\nexport default () => (\r\n    <Video />\r\n)\r\n*/\r\n\r\n//ALSO WORKS\r\n\r\n// const BroadcasterPage = () => (\r\n//     <Video />\r\n// )\r\n// export default BroadcasterPage;\r\n\r\n\r\n// const BroadcasterPage = () => {\r\n    \r\n\r\n//     document.querySelector('cam').innerHTML='wew';\r\n\r\n//     return(\r\n//             <Text name=\"wew\"/>\r\n//     )\r\n//     return (\r\n//         <div>\r\n//             <video playsInline autoPlay muted></video>\r\n//             <script type=\"text/javascript\">\r\n\r\n\r\n//                 const video = document.querySelector('video');\r\n//                 navigator.mediaDevices.getUserMedia({video: true, audio: true})\r\n//                 .then((stream) => {video.srcObject=stream});\r\n//             </script>\r\n//             <p> broadcaster page </p>\r\n//         </div>\r\n//     )\r\n\r\n// }\r\n// export default BroadcasterPage;\r\n"]},"metadata":{},"sourceType":"module"}