{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport io from 'socket.io-client';\nimport { render } from 'react-dom';\nimport { Video } from '../components/Video';\nimport Router from 'next/router';\n/***** help from https://github.com/Basscord/webrtc-video-broadcast *****/\n\nvar Medium = /*#__PURE__*/function (_Component) {\n  _inherits(Medium, _Component);\n\n  function Medium(props) {\n    var _this;\n\n    _classCallCheck(this, Medium);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Medium).call(this, props));\n    _this.state = {\n      hello: ''\n    };\n    return _this;\n  }\n\n  _createClass(Medium, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.socket = io();\n      var peerConnection;\n      var video = document.getElementById('video');\n      this.socket.on('offer', function (id, message) {\n        console.log(\"8) WATCHER RECEIVES offer\");\n        var peerConnection = new RTCPeerConnection();\n        peerConnection.setRemoteDescription(message).then(function () {\n          return peerConnection.createAnswer();\n        }).then(function (sdp) {\n          return peerConnection.setLocalDescription(sdp);\n        }).then(function () {\n          console.log(\"WATCHER EMITS answer\");\n\n          _this2.socket.emit('answer', id, peerConnection.localDescription);\n        });\n\n        peerConnection.ontrack = function (event) {\n          console.log(\"MOUNT VIDEO, STREAMS: \" + event.streams[0] + \" ACTIVE: \" + event.streams[0].active);\n          document.getElementById('video').srcObject = event.streams[0];\n        };\n      });\n      this.socket.on('connect', function () {\n        _this2.socket.emit('watcher');\n      });\n      this.socket.on('broadcaster', function () {\n        console.log(\"3) WATCHER RECEIVES broadcaster AND EMITS watcher\");\n\n        _this2.socket.emit('watcher');\n      });\n      this.socket.on('pickstream', function (broadcasters) {\n        console.log(\"5) WATCHER CHOOSING STREAM\");\n        console.log(_Object$keys(broadcasters));\n        var pickstream = document.getElementById('pickstream');\n\n        var broadcast_list = _Object$keys(broadcasters);\n\n        for (var broadcast in broadcast_list) {\n          pickstream.innerHTML = pickstream.innerHTML + \"<div>\".concat(broadcast, \"</div>\");\n        }\n      });\n      this.socket.on('dc', function () {\n        console.log(\"WATCHER RECEIVED DISCONNECT\");\n        peerConnection.close();\n      });\n      Router.beforePopState(function (_ref) {\n        var url = _ref.url,\n            as = _ref.as,\n            options = _ref.options;\n        console.log(\"ATTEMPTING TO DISCONNECT AS WATCHER\");\n\n        if (as !== \"/\" || as !== \"/other\") {\n          window.location.href = as;\n          return false;\n        }\n\n        ;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(\"video\", {\n        id: \"video\",\n        width: \"640\",\n        height: \"480\",\n        autoPlay: true\n      }), __jsx(\"div\", {\n        id: \"pickstream\"\n      }));\n    }\n  }]);\n\n  return Medium;\n}(Component);\n\nexport { Medium as default };","map":{"version":3,"sources":["C:/Users/carlo_fqwuyel/Desktop/UofT/CSCC09/project/project-project-more-cookies/the-infinite-potluck/pages/watcher.js"],"names":["Component","io","render","Video","Router","Medium","props","state","hello","socket","peerConnection","video","document","getElementById","on","id","message","console","log","RTCPeerConnection","setRemoteDescription","then","createAnswer","sdp","setLocalDescription","emit","localDescription","ontrack","event","streams","active","srcObject","broadcasters","pickstream","broadcast_list","broadcast","innerHTML","close","beforePopState","url","as","options","window","location","href"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { render } from 'react-dom';\r\nimport { Video } from '../components/Video';\r\nimport Router from 'next/router';\r\n\r\n/***** help from https://github.com/Basscord/webrtc-video-broadcast *****/\r\n\r\nexport default class Medium extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            hello:''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.socket=io()\r\n\r\n        let peerConnection;\r\n        let video = document.getElementById('video');\r\n\r\n        this.socket.on('offer', (id, message) => {\r\n            console.log(\"8) WATCHER RECEIVES offer\");\r\n            const peerConnection = new RTCPeerConnection();\r\n            peerConnection.setRemoteDescription(message)\r\n                .then(() => peerConnection.createAnswer())\r\n                .then(sdp => peerConnection.setLocalDescription(sdp))\r\n                .then(() => {\r\n                    console.log(\"WATCHER EMITS answer\");\r\n                    this.socket.emit('answer', id, peerConnection.localDescription);\r\n                });\r\n            peerConnection.ontrack = function(event) {\r\n                console.log(\"MOUNT VIDEO, STREAMS: \" + event.streams[0] + \" ACTIVE: \" + event.streams[0].active);\r\n                document.getElementById('video').srcObject = event.streams[0];\r\n            }\r\n        });\r\n\r\n        this.socket.on('connect', () => {\r\n            this.socket.emit('watcher');\r\n        });\r\n        \r\n        this.socket.on('broadcaster', () => {\r\n            console.log(\"3) WATCHER RECEIVES broadcaster AND EMITS watcher\");\r\n            this.socket.emit('watcher');\r\n        });\r\n\r\n        this.socket.on('pickstream', (broadcasters) => {\r\n            console.log(\"5) WATCHER CHOOSING STREAM\");\r\n            console.log(Object.keys(broadcasters));\r\n\r\n            let pickstream = document.getElementById('pickstream');\r\n            let broadcast_list = Object.keys(broadcasters);\r\n            for(let broadcast in broadcast_list){\r\n                pickstream.innerHTML = pickstream.innerHTML + `<div>${broadcast}</div>`;\r\n            }\r\n        });\r\n\r\n        this.socket.on('dc', () => {\r\n            console.log(\"WATCHER RECEIVED DISCONNECT\");\r\n            peerConnection.close();\r\n        });\r\n\r\n        Router.beforePopState(({url, as, options}) => {\r\n            console.log(\"ATTEMPTING TO DISCONNECT AS WATCHER\");\r\n            if(as !== \"/\" || as !== \"/other\") {\r\n                window.location.href = as;\r\n                return false;\r\n            };\r\n        });\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <video id=\"video\" width=\"640\" height=\"480\" autoPlay >\r\n                </video>\r\n                <div id=\"pickstream\">\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}