{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport io from 'socket.io-client';\nimport { render } from 'react-dom';\nimport Router from 'next/router';\n/***** help from https://github.com/Basscord/webrtc-video-broadcast *****/\n\nvar Medium = /*#__PURE__*/function (_Component) {\n  _inherits(Medium, _Component);\n\n  function Medium() {\n    _classCallCheck(this, Medium);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Medium).apply(this, arguments));\n  }\n\n  _createClass(Medium, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      this.socket = io();\n      var peerConnections = {};\n      var video = document.getElementById('video');\n      var peerConnection = new RTCPeerConnection();\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      }).then(function (stream) {\n        video.srcObject = stream;\n        console.log(\"1) BROADCASTER EMITS broadcaster\");\n\n        _this.socket.emit('broadcaster');\n      })[\"catch\"](function (err) {\n        console.log(err);\n      });\n      this.socket.on('answer', function (id, description) {\n        console.log(\"13) BROADCASTER RECEIVES answer, SETS RD\");\n        peerConnections[id].setRemoteDescription(description);\n      });\n      this.socket.on('watcher', function (id) {\n        console.log(\"8) BROADCASTER RECEIVES watcher\");\n        var peerConnection = new RTCPeerConnection();\n        peerConnections[id] = peerConnection;\n        var stream = video.srcObject;\n        stream.getTracks().forEach(function (track) {\n          return peerConnection.addTrack(track, stream);\n        });\n        peerConnection.createOffer().then(function (sdp) {\n          return peerConnection.setLocalDescription(sdp);\n        }).then(function () {\n          console.log(\"9) BROADCASTER EMITS offer\");\n\n          _this.socket.emit('offer', id, peerConnection.localDescription);\n        });\n      });\n      this.socket.on('dc', function (id) {\n        console.log(\"BROADCASTER RECEIVED DISCONNECT\");\n\n        if (peerConnections[id]) {\n          peerConnections[id].close();\n          delete peerConnections[id];\n        }\n      });\n      Router.beforePopState(function (_ref) {\n        var url = _ref.url,\n            as = _ref.as,\n            options = _ref.options;\n        console.log(\"ATTEMPTING TO DISCONNECT AS BROADCASTER\");\n\n        if (as !== \"/\" || as !== \"/other\") {\n          window.location.href = as;\n          return false;\n        }\n\n        ;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(\"video\", {\n        id: \"video\",\n        autoPlay: true\n      }));\n    }\n  }]);\n\n  return Medium;\n}(Component);\n\nexport { Medium as default };","map":{"version":3,"sources":["C:/Users/carlo_fqwuyel/Desktop/UofT/CSCC09/project/project-project-more-cookies/the-infinite-potluck/pages/broadcaster.js"],"names":["Component","io","render","Router","Medium","socket","peerConnections","video","document","getElementById","peerConnection","RTCPeerConnection","navigator","mediaDevices","getUserMedia","audio","then","stream","srcObject","console","log","emit","err","on","id","description","setRemoteDescription","getTracks","forEach","track","addTrack","createOffer","sdp","setLocalDescription","localDescription","close","beforePopState","url","as","options","window","location","href"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { render } from 'react-dom';\r\nimport Router from 'next/router';\r\n\r\n/***** help from https://github.com/Basscord/webrtc-video-broadcast *****/\r\n\r\nexport default class Medium extends Component {\r\n    componentDidMount(){\r\n        this.socket=io();\r\n        \r\n        const peerConnections = {};\r\n        const video = document.getElementById('video');\r\n        const peerConnection = new RTCPeerConnection();\r\n        navigator.mediaDevices.getUserMedia({video: true, audio: true})\r\n            .then((stream) => {\r\n                video.srcObject = stream;\r\n                console.log(\"1) BROADCASTER EMITS broadcaster\");\r\n                this.socket.emit('broadcaster');\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err);\r\n            });\r\n\r\n        this.socket.on('answer', function (id, description){\r\n            console.log(\"13) BROADCASTER RECEIVES answer, SETS RD\");\r\n            peerConnections[id].setRemoteDescription(description);\r\n        });\r\n\r\n        this.socket.on('watcher', id => {\r\n            console.log(\"8) BROADCASTER RECEIVES watcher\");\r\n            const peerConnection = new RTCPeerConnection();\r\n            peerConnections[id] = peerConnection;\r\n            let stream = video.srcObject;\r\n            stream.getTracks().forEach(track => peerConnection.addTrack(track, stream));\r\n            peerConnection.createOffer()\r\n            .then(sdp => peerConnection.setLocalDescription(sdp))\r\n            .then( () => {\r\n                console.log(\"9) BROADCASTER EMITS offer\")\r\n                this.socket.emit('offer', id, peerConnection.localDescription);\r\n            });\r\n        });\r\n\r\n        this.socket.on('dc', id => {\r\n            console.log(\"BROADCASTER RECEIVED DISCONNECT\");\r\n            if(peerConnections[id]){\r\n                peerConnections[id].close();\r\n                delete peerConnections[id];\r\n            }\r\n        });\r\n\r\n        Router.beforePopState(({url, as, options}) => {\r\n            console.log(\"ATTEMPTING TO DISCONNECT AS BROADCASTER\");\r\n            if(as !== \"/\" || as !== \"/other\") {\r\n                window.location.href = as;\r\n                return false;\r\n            };\r\n        });\r\n    }    \r\n    render(){\r\n        return(\r\n            <div>\r\n                <video id=\"video\" autoPlay>\r\n                </video>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}