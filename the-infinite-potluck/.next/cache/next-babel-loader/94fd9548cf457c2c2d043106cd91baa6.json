{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { Portal } from './Portal';\nimport io from 'socket.io-client';\nexport var Video = /*#__PURE__*/function (_React$Component) {\n  _inherits(Video, _React$Component);\n\n  function Video() {\n    _classCallCheck(this, Video);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Video).apply(this, arguments));\n  }\n\n  _createClass(Video, [{\n    key: \"componentDidMount\",\n    // WEBCAM VIDEO PLAYBACK; WORKING\n    // componentDidMount(){\n    //     const video = document.getElementById('videoElement');\n    //     console.log(\"VIDEO: \" + video);\n    //     navigator.mediaDevices.getUserMedia({video: true, audio: true})\n    //         .then((stream) => {video.srcObject=stream})\n    //         .catch(function (err0r) {\n    //             console.log(\"Something went wrong!\");\n    //         });\n    // }\n    value: function componentDidMount() {\n      var video = document.getElementById('videoElement');\n      console.log(\"VIDEO: \" + video);\n      var peerConnection = new RTCPeerConnection();\n      var socket = io();\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      }).then(function (stream) {\n        peerConnection.addStream(stream);\n        peerConnection.createOffer().then(function (sdp) {\n          return peerConnection.setLocalDescription(sdp);\n        }).then(function () {\n          socket.emit('offer', peerConnection.localDescription);\n        });\n      })[\"catch\"](function (err0r) {\n        console.log(\"Something went wrong!\");\n      });\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      }).then(function (stream) {\n        video.srcObject = stream;\n      })[\"catch\"](function (err0r) {\n        console.log(\"Something went wrong!\");\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(\"video\", {\n        id: \"videoElement\",\n        autoPlay: true\n      }), __jsx(\"p\", null, \" video component \"));\n    }\n  }]);\n\n  return Video;\n}(React.Component);","map":{"version":3,"sources":["C:/Users/carlo_fqwuyel/Desktop/UofT/CSCC09/project/project-project-more-cookies/the-infinite-potluck/components/Video.js"],"names":["React","Portal","io","Video","video","document","getElementById","console","log","peerConnection","RTCPeerConnection","socket","navigator","mediaDevices","getUserMedia","audio","then","stream","addStream","createOffer","sdp","setLocalDescription","emit","localDescription","err0r","srcObject","Component"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,WAAaC,KAAb;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXJ,wCAauB;AACf,UAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAYJ,KAAxB;AAEA,UAAMK,cAAc,GAAG,IAAIC,iBAAJ,EAAvB;AACA,UAAMC,MAAM,GAAGT,EAAE,EAAjB;AAEAU,MAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AAACV,QAAAA,KAAK,EAAE,IAAR;AAAcW,QAAAA,KAAK,EAAE;AAArB,OAApC,EACKC,IADL,CACU,UAACC,MAAD,EAAY;AACdR,QAAAA,cAAc,CAACS,SAAf,CAAyBD,MAAzB;AACAR,QAAAA,cAAc,CAACU,WAAf,GACKH,IADL,CACU,UAAAI,GAAG;AAAA,iBAAIX,cAAc,CAACY,mBAAf,CAAmCD,GAAnC,CAAJ;AAAA,SADb,EAEKJ,IAFL,CAEU,YAAU;AACZL,UAAAA,MAAM,CAACW,IAAP,CAAY,OAAZ,EAAqBb,cAAc,CAACc,gBAApC;AACH,SAJL;AAKH,OARL,WASW,UAAUC,KAAV,EAAiB;AACpBjB,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH,OAXL;AAYAI,MAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AAAEV,QAAAA,KAAK,EAAE,IAAT;AAAeW,QAAAA,KAAK,EAAE;AAAtB,OAApC,EACKC,IADL,CACU,UAACC,MAAD,EAAY;AAAEb,QAAAA,KAAK,CAACqB,SAAN,GAAkBR,MAAlB;AAA0B,OADlD,WAEW,UAAUO,KAAV,EAAiB;AACpBjB,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH,OAJL;AAKH;AArCL;AAAA;AAAA,6BAuCa;AACL,aACI,4BACI;AAAO,QAAA,EAAE,EAAC,cAAV;AAAyB,QAAA,QAAQ;AAAjC,QADJ,EAGI,qCAHJ,CADJ;AAOH;AA/CL;;AAAA;AAAA,EAA2BR,KAAK,CAAC0B,SAAjC","sourcesContent":["import * as React from 'react';\r\nimport { Portal } from './Portal';\r\nimport io from 'socket.io-client';\r\n\r\nexport class Video extends React.Component {\r\n    \r\n    // WEBCAM VIDEO PLAYBACK; WORKING\r\n    // componentDidMount(){\r\n    //     const video = document.getElementById('videoElement');\r\n    //     console.log(\"VIDEO: \" + video);\r\n    //     navigator.mediaDevices.getUserMedia({video: true, audio: true})\r\n    //         .then((stream) => {video.srcObject=stream})\r\n    //         .catch(function (err0r) {\r\n    //             console.log(\"Something went wrong!\");\r\n    //         });\r\n    // }\r\n\r\n    componentDidMount(){\r\n        const video = document.getElementById('videoElement');\r\n        console.log(\"VIDEO: \" + video);\r\n\r\n        const peerConnection = new RTCPeerConnection();\r\n        const socket = io();\r\n\r\n        navigator.mediaDevices.getUserMedia({video: true, audio: true})\r\n            .then((stream) => {\r\n                peerConnection.addStream(stream);\r\n                peerConnection.createOffer()\r\n                    .then(sdp => peerConnection.setLocalDescription(sdp))\r\n                    .then(function(){\r\n                        socket.emit('offer', peerConnection.localDescription);\r\n                    });\r\n            })\r\n            .catch(function (err0r) {\r\n                console.log(\"Something went wrong!\");\r\n            });\r\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n            .then((stream) => { video.srcObject = stream })\r\n            .catch(function (err0r) {\r\n                console.log(\"Something went wrong!\");\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <video id=\"videoElement\" autoPlay>\r\n                </video>\r\n                <p> video component </p>\r\n            </>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}